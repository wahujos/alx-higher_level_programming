Here are the test cases

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> baseg = BaseGeometry()

>>> baseg.integer_validator("my_int", 12)
>>> baseg.integer_validator("width", 89)

>>> baseg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer


>>> baseg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0


>>> baseg.integer_validator("distance", -4)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0


>>> baseg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> print(dir(baseg))
['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'area', 'integer_validator']


>>> baseg.integer_validator("age", (4,))
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> baseg.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer


>>> baseg.integer_validator("age", {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer


>>> baseg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer


>>> baseg.integer_validator("age", 4)


>>> baseg.integer_validator("age", True)


>>> baseg.integer_validator("age", 1)


>>> baseg.integer_validator("age")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value' 
